{"version":3,"sources":["components/Filter/Filter.module.css","components/ContactList/ContactList.module.css","components/Contact/Contact.module.css","components/Container/Container.module.css","components/Section/Section.module.css","components/Container/Container.jsx","components/Section/Section.jsx","redux/contacts/contactsActions.js","services/contactsApi.js","redux/contacts/contactsOperations.js","redux/contacts/contactsSelectors.js","components/ContactForm/ContactForm.jsx","components/Filter/Filter.jsx","components/Contact/Contact.jsx","components/ContactList/ContactList.jsx","App.js","redux/contacts/contactsReducer.js","redux/store.js","index.js","components/ContactForm/ContactForm.module.css"],"names":["module","exports","Container","children","className","s","container","Section","section","getContactsRequest","createAction","getContactsSuccess","getContactsError","addContactRequest","addContactSuccess","addContactError","deleteContactRequest","deleteContactSuccess","deleteContactError","changeFilter","getContactsAPI","a","axios","get","data","addContactAPI","contact","post","deleteContactAPI","id","delete","defaults","baseURL","getItems","state","contacts","items","getFilter","filter","visibleContacts","normalizedFilter","trim","toLowerCase","name","number","includes","ContactForm","useState","setName","setNumber","contactsToContactForm","useSelector","dispatch","useDispatch","handleChange","e","currentTarget","value","resetLocalState","onSubmit","preventDefault","normalizedName","some","alert","contactsActions","contactsAPI","addContact","form","autoComplete","label","type","pattern","title","required","onChange","input","btn","Filter","filterToFilter","target","Contact","onDeleteContact","deleteContact","onClick","ContactList","contactsToContactList","contactList","map","contactItem","App","useEffect","initialState","contactsItemsReducer","createReducer","_","payload","contactsFilterReducer","errorReducer","combineReducers","error","store","configureStore","reducer","contactsReducer","devTools","process","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c5145b17.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"Filter_label__Mfmxg\",\"input\":\"Filter_input__BokJI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactList\":\"ContactList_contactList__2kptz\",\"contactItem\":\"ContactList_contactItem__3n5L2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contact\":\"Contact_contact__3ghDz\",\"btn\":\"Contact_btn__2f3-y\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Container_container__39nsi\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"section\":\"Section_section__111F9\",\"title\":\"Section_title__15925\"};","import PropTypes from 'prop-types';\r\nimport s from './Container.module.css';\r\n\r\nfunction Container({ children }) {\r\n  return (\r\n    <div className={s.container}>\r\n      {children}\r\n    </div>\r\n  );\r\n};\r\n\r\nContainer.propTypes = {\r\n  children: PropTypes.node\r\n};\r\n\r\nexport default Container;","import PropTypes from 'prop-types';\r\nimport s from './Section.module.css';\r\n\r\nfunction Section({ children }) {\r\n  return (\r\n    <section className={s.section}>\r\n      {children}\r\n    </section>\r\n  );\r\n};\r\n\r\nSection.propTypes = {\r\n  children: PropTypes.node\r\n};\r\n\r\nexport default Section;","import { createAction } from '@reduxjs/toolkit';\r\n\r\nexport const getContactsRequest = createAction('contacts/getContactsRequest');\r\nexport const getContactsSuccess = createAction('contacts/getContactsSuccess');\r\nexport const getContactsError = createAction('contacts/getContactsError');\r\n\r\nexport const addContactRequest = createAction('contacts/addContactRequest');\r\nexport const addContactSuccess = createAction('contacts/addContactSuccess');\r\nexport const addContactError = createAction('contacts/addContactError');\r\n\r\nexport const deleteContactRequest = createAction('contacts/deleteContactRequest');\r\nexport const deleteContactSuccess = createAction('contacts/deleteContactSuccess');\r\nexport const deleteContactError = createAction('contacts/deleteContactError');\r\n\r\nexport const changeFilter = createAction('contacts/ChangeFilter');","import axios from 'axios';\r\n\r\naxios.defaults.baseURL = 'https://goit-react-hw-07-phonebo-3e645-default-rtdb.europe-west1.firebasedatabase.app/';\r\n\r\nexport async function getContactsAPI() {\r\n  const { data } = await axios.get(\"/contacts.json\");\r\n  return data;\r\n};\r\n\r\n// axios\r\n//     .get(`/contacts`)\r\n//     .then(({ data }) => dispatch(contactsActions.fetchContactsSuccess(data)))\r\n//     .catch(error => dispatch(contactsActions.fetchContactsError(error)));\r\n\r\n// export const getTodosApi = () => {\r\n//   return axios\r\n//     .get(\"/todos.json\")\r\n//     .then(({ data }) => data)\r\n//     .catch((err) => {\r\n//       throw err;\r\n//     });\r\n// };\r\n\r\nexport async function addContactAPI(contact) {\r\n  await axios.post(\"/contacts.json\", contact);\r\n  return contact;\r\n};\r\n\r\n// axios\r\n//     .post(`/contacts`, contact)\r\n//     .then(({ data }) => dispatch(contactsActions.addContactSuccess(data)))\r\n//     .catch(error => dispatch(contactsActions.addContactError(error)));\r\n\r\n// export const addTodoApi = (todo) => {\r\n//   return axios\r\n//     .post(\"/todos.json\", todo)\r\n//     .then(({ data }) => ({ ...todo, id: data.name }))\r\n//     .catch((err) => {\r\n//       throw err;\r\n//     });\r\n// };\r\n\r\nexport async function deleteContactAPI(id) {\r\n  await axios.delete(\"/contacts/\" + id + \".json\");\r\n  return id;\r\n};\r\n\r\n// axios\r\n//   .delete(`/contacts/${id}`)\r\n//   .then(() => dispatch(contactsActions.deleteContactSuccess(id)))\r\n//   .catch(error => dispatch(contactsActions.deleteContactError(error)));\r\n\r\n// export const removeTodoApi = (id) => {\r\n//   return axios\r\n//     .delete(\"/todos/\" + id + \".json\") // null\r\n//     .then(() => id) // data = null\r\n//     .catch((err) => {\r\n//       throw err;\r\n//     });\r\n// };","import * as contactsActions from './contactsActions';\r\nimport * as contactsAPI from '../../services/contactsApi';\r\n\r\nexport const getContacts = () => async dispatch => {\r\n  dispatch(contactsActions.getContactsRequest());\r\n\r\n  try {\r\n    const contacts = await contactsAPI.getContactsAPI();\r\n    dispatch(contactsActions.getContactsSuccess(contacts));\r\n  } catch (error) {\r\n    dispatch(contactsActions.getContactsError(error))\r\n  }\r\n};\r\n\r\nexport const addContact = ({ name, number }) => async dispatch => {\r\n  dispatch(contactsActions.addContactRequest());\r\n\r\n  try {\r\n    const contact = { name, number };\r\n    await contactsAPI.addContactAPI(contact);\r\n    dispatch(contactsActions.addContactSuccess(contact));\r\n  } catch (error) {\r\n    dispatch(contactsActions.addContactError(error))\r\n  }\r\n};\r\n\r\nexport const deleteContact = id => async dispatch => {\r\n  dispatch(contactsActions.deleteContactRequest());\r\n\r\n  try {\r\n    await contactsAPI.deleteContactAPI(id);\r\n    dispatch(contactsActions.deleteContactSuccess(id));\r\n  } catch (error) {\r\n    dispatch(contactsActions.deleteContactError(error))\r\n  }\r\n};","export const getItems = state => state.contacts.items;\n\nexport const getFilter = state => state.contacts.filter;\n\nexport const visibleContacts = state => {\n  const items = getItems(state);\n  const filter = getFilter(state);\n  const normalizedFilter = filter.trim().toLowerCase();\n\n  return items.filter(({ name, number }) =>\n    name.toLowerCase().includes(normalizedFilter) ||\n    number.includes(filter.trim())\n  );\n};","import { useState } from 'react';\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\n\r\nimport s from './ContactForm.module.css';\r\nimport { addContact } from '../../redux/contacts/contactsOperations';\r\nimport { getItems } from \"../../redux/contacts/contactsSelectors\";\r\n\r\nfunction ContactForm() {\r\n  const [name,setName] = useState('');\r\n  const [number, setNumber] = useState('');\r\n  \r\n  const contactsToContactForm = useSelector(getItems);\r\n  const dispatch = useDispatch();\r\n\r\n  const handleChange = e => {\r\n    const { name, value } = e.currentTarget;\r\n    switch (name) {\r\n      case 'name':\r\n        setName(value);\r\n        break;\r\n      case 'number':\r\n        setNumber(value);\r\n        break;\r\n      default:\r\n        return;\r\n    }\r\n  };\r\n\r\n  const handleSubmit = e => {\r\n    e.preventDefault();\r\n    // Проверка на повторный ввод существующего контакта\r\n    const normalizedName = name.toLowerCase();\r\n    contactsToContactForm.some(contact =>\r\n      contact.name.toLowerCase() === normalizedName ||\r\n      contact.number === number)\r\n      ?\r\n        alert(`${name} is already in contacts.`)\r\n      : \r\n        dispatch(addContact({ name, number }));\r\n    resetLocalState();\r\n  };\r\n\r\n  const resetLocalState = () => {\r\n    setName('');\r\n    setNumber('');\r\n  };\r\n\r\n  return (\r\n    <form\r\n      onSubmit={handleSubmit} \r\n      className={s.form} \r\n      autoComplete=\"off\">\r\n      \r\n      <label className={s.label}>\r\n        Name\r\n        <input\r\n          name=\"name\"\r\n          type=\"text\"\r\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n          required\r\n            value={name}\r\n            onChange={handleChange}\r\n            className={s.input}\r\n        />\r\n      </label>\r\n\r\n      <label className={s.label}>\r\n        Number\r\n        <input\r\n          name=\"number\"\r\n          type=\"tel\"\r\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n          title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n          required\r\n            value={number}\r\n            onChange={handleChange}\r\n            className={s.input}\r\n        />\r\n      </label>        \r\n\r\n      <button type=\"submit\" className={s.btn}>Add contact</button>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default ContactForm;","import { useSelector, useDispatch } from \"react-redux\";\r\n\r\nimport s from './Filter.module.css';\r\nimport { changeFilter } from '../../redux/contacts/contactsActions';\r\nimport { getFilter } from '../../redux/contacts/contactsSelectors';\r\n\r\nfunction Filter() {\r\n  const filterToFilter = useSelector(getFilter);\r\n  const dispatch = useDispatch();\r\n\r\n  const onChange = ({ target: { value } }) => dispatch(changeFilter(value));\r\n\r\n  return (\r\n    <label className={s.label}>\r\n      Find contacts by name / number\r\n      <input\r\n        type=\"text\"\r\n        value={filterToFilter}\r\n        onChange={onChange}\r\n        className={s.input}>\r\n      </input>\r\n    </label>\r\n  );\r\n};\r\n\r\nexport default Filter;","import { useDispatch } from \"react-redux\";\r\nimport PropTypes from 'prop-types';\r\n\r\nimport s from './Contact.module.css';\r\nimport { deleteContact } from '../../redux/contacts/contactsOperations';\r\n\r\nfunction Contact({ name, number, id }) {\r\n  const dispatch = useDispatch();\r\n  const onDeleteContact = id => dispatch(deleteContact(id));\r\n\r\n  return (\r\n    <>\r\n      <p className={s.contact}>• {name}: {number}</p>\r\n      <button className={s.btn} onClick={() => onDeleteContact(id)}>\r\n        Delete\r\n      </button>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Contact;\r\n\r\nContact.propTypes = {\r\n  name: PropTypes.string.isRequired,\r\n  number: PropTypes.string.isRequired,\r\n  id: PropTypes.string.isRequired,\r\n};","import { useSelector } from 'react-redux';\r\n\r\nimport s from './ContactList.module.css';\r\nimport Contact from '../Contact';\r\nimport { visibleContacts } from '../../redux/contacts/contactsSelectors';\r\n\r\nfunction ContactList() {\r\n  const contactsToContactList = useSelector(visibleContacts);\r\n\r\n  return (\r\n    <ul className={s.contactList}>\r\n      {contactsToContactList.map(({ id, name, number }) => {\r\n        return (\r\n          <li key={id} className={s.contactItem}>\r\n            <Contact\r\n              name={name}\r\n              number={number}\r\n              id={id}>\r\n            </Contact>\r\n          </li>\r\n        );\r\n      })}\r\n    </ul>\r\n  );\r\n};\r\n\r\nexport default ContactList;","import { useEffect } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\n\r\nimport './App.css';\r\nimport Container from './components/Container';\r\nimport Section from './components/Section';\r\nimport ContactForm from './components/ContactForm';\r\nimport Filter from './components/Filter';\r\nimport ContactList from './components/ContactList';\r\nimport { getContacts } from './redux/contacts/contactsOperations';\r\n\r\nfunction App() {\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    dispatch(getContacts());\r\n  }, [dispatch]);\r\n\r\n  return (\r\n    <Container>\r\n      <Section>\r\n        <h1>Phonebook</h1>\r\n        <ContactForm />\r\n      </Section>\r\n      \r\n      <Section>\r\n        <h2>Contacts</h2>\r\n        <Filter />\r\n        <ContactList />\r\n      </Section>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default App;","import { combineReducers } from 'redux';\r\nimport { createReducer } from '@reduxjs/toolkit';\r\n\r\nimport { getContactsRequest, getContactsSuccess, getContactsError, addContactRequest, addContactSuccess, addContactError, deleteContactRequest, deleteContactSuccess, deleteContactError, changeFilter } from './contactsActions';\r\n\r\nconst initialState = {\r\n  contacts: {\r\n    items: [],\r\n    filter: '',\r\n  },\r\n};\r\n  \r\nconst contactsItemsReducer = createReducer(initialState.contacts.items, {\r\n  [getContactsSuccess]: (_, { payload }) => payload,\r\n  [addContactSuccess]: (state, { payload }) => [...state, payload],\r\n  [deleteContactSuccess]: (state, { payload }) => state.filter(({ id }) => id !== payload),\r\n});\r\n\r\nconst contactsFilterReducer = createReducer(initialState.contacts.filter, {\r\n  [changeFilter]: (_, { payload }) => payload,\r\n});\r\n\r\nconst errorReducer = createReducer(null, {\r\n  [getContactsError]: (_, { payload }) => payload,\r\n  [getContactsRequest]: () => null, //стираем ошибку, чтоб не висела перед глазами всё время\r\n  [addContactError]: (_, { payload }) => payload,\r\n  [addContactRequest]: () => null,\r\n  [deleteContactError]: (_, { payload }) => payload,\r\n  [deleteContactRequest]: () => null,\r\n});\r\n\r\nexport default combineReducers({\r\n  items: contactsItemsReducer,\r\n  filter: contactsFilterReducer,\r\n  error: errorReducer,\r\n});","import { configureStore } from '@reduxjs/toolkit';\r\n\r\nimport contactsReducer from './contacts/contactsReducer';\r\n \r\nconst store = configureStore({\r\n  reducer: {\r\n    contacts: contactsReducer,\r\n  },\r\n  devTools: process.env.NODE_ENV === 'development',\r\n});\r\n\r\nexport default store;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Provider } from 'react-redux';\r\n\r\nimport './index.css';\r\nimport App from './App';\r\nimport store from './redux/store';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <App />\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__30PF_\",\"label\":\"ContactForm_label__1tXFV\",\"input\":\"ContactForm_input__3PRf-\",\"btn\":\"ContactForm_btn__2ZFcF\"};"],"sourceRoot":""}